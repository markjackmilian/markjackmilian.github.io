Bridge.assembly("Bridge.Navigation",function($asm){"use strict";Bridge.define("Bridge.Navigation.INavigator",{$kind:"interface"});Bridge.define("Bridge.Navigation.INavigatorConfigurator",{$kind:"interface"});Bridge.define("Bridge.Navigation.BridgeNavigatorWithRouting.UrlDescriptor",{props:{PageId:null,Parameters:null}});Bridge.define("Bridge.Navigation.IAmLoadable",{$kind:"interface"});Bridge.define("Bridge.Navigation.IPageDescriptor",{$kind:"interface"});Bridge.define("Bridge.Navigation.NavigationUtility",{statics:{fields:{VirtualDirectory:null},methods:{PushState:function(pageId,parameters){parameters===void 0&&(parameters=null);var baseUrl=Bridge.Navigation.NavigationUtility.BuildBaseUrl(pageId);window.history.pushState(null,"",parameters!=null?System.String.format("{0}={1}",baseUrl,Bridge.global.btoa(JSON.stringify(parameters))):baseUrl)},ReplaceState:function(pageId,parameters){parameters===void 0&&(parameters=null);Bridge.Navigation.NavigationUtility.PushState(pageId,parameters)},GetParameter:function(T,parameters,paramKey){if(parameters==null)throw new System.Exception("Parameters is null!");if(!parameters.containsKey(paramKey))throw new System.Exception(System.String.format("No parameter with key {0} found!",[paramKey]));var value=parameters.get(paramKey);return Bridge.cast(Bridge.unbox(value),T)},BuildBaseUrl:function(pageId){var baseUrl=System.String.format("{0}//{1}",window.location.protocol,window.location.host);return System.String.isNullOrEmpty(Bridge.Navigation.NavigationUtility.VirtualDirectory)?System.String.format("{0}#{1}",baseUrl,pageId):System.String.format("{0}/{1}#{2}",baseUrl,Bridge.Navigation.NavigationUtility.VirtualDirectory,pageId)}}}});Bridge.define("Bridge.Navigation.BridgeNavigator",{inherits:[Bridge.Navigation.INavigator],statics:{fields:{_actualController:null}},fields:{Configuration:null},events:{OnNavigated:null},props:{LastNavigateController:{get:function(){return Bridge.Navigation.BridgeNavigator._actualController}}},alias:["EnableSpafAnchors","Bridge$Navigation$INavigator$EnableSpafAnchors","Navigate","Bridge$Navigation$INavigator$Navigate","addOnNavigated","Bridge$Navigation$INavigator$addOnNavigated","removeOnNavigated","Bridge$Navigation$INavigator$removeOnNavigated","LastNavigateController","Bridge$Navigation$INavigator$LastNavigateController","InitNavigation","Bridge$Navigation$INavigator$InitNavigation"],ctors:{ctor:function(configuration){this.$initialize();this.Configuration=configuration}},methods:{EnableSpafAnchors:function(){var allAnchors=$("a");allAnchors.off(System.Enum.toString(System.String,"click"));allAnchors.click(Bridge.fn.bind(this,$asm.$.Bridge.Navigation.BridgeNavigator.f1))},Navigate:function(pageId,parameters){var $t,page,redirectKey,body;if(parameters===void 0&&(parameters=null),page=this.Configuration.Bridge$Navigation$INavigatorConfigurator$GetPageDescriptorByKey(pageId),page==null)throw new System.Exception(System.String.format("Page not found with ID {0}",[pageId]));if(redirectKey=Bridge.staticEquals($t=page.Bridge$Navigation$IPageDescriptor$RedirectRules,null)?null:$t(),!System.String.isNullOrEmpty(redirectKey)){this.Navigate(redirectKey,parameters);return}if(body=this.Configuration.Bridge$Navigation$INavigatorConfigurator$Body,body==null)throw new System.Exception("Cannot find navigation body element.");this.Configuration.Bridge$Navigation$INavigatorConfigurator$Body.load(page.Bridge$Navigation$IPageDescriptor$HtmlLocation(),null,Bridge.fn.bind(this,function(){var $t1,$t2,enableAnchors,controller;Bridge.staticEquals($t1=page.Bridge$Navigation$IPageDescriptor$PreparePage,null)?null:$t1();this.Configuration.Bridge$Navigation$INavigatorConfigurator$DisableAutoSpafAnchorsOnNavigate||(enableAnchors=Bridge.staticEquals($t2=page.Bridge$Navigation$IPageDescriptor$AutoEnableSpafAnchors,null)?null:$t2(),System.Nullable.hasValue(enableAnchors)&&System.Nullable.getValue(enableAnchors)&&this.EnableSpafAnchors());Bridge.staticEquals(page.Bridge$Navigation$IPageDescriptor$PageController,null)||(this.LastNavigateController!=null&&this.LastNavigateController.Bridge$Navigation$IAmLoadable$OnLeave(),controller=page.Bridge$Navigation$IPageDescriptor$PageController(),controller.Bridge$Navigation$IAmLoadable$OnLoad(parameters),Bridge.Navigation.BridgeNavigator._actualController=controller,Bridge.staticEquals(this.OnNavigated,null)?null:this.OnNavigated(this,controller))}))},InitNavigation:function(){this.EnableSpafAnchors();this.Navigate(this.Configuration.Bridge$Navigation$INavigatorConfigurator$HomeId)}}});Bridge.ns("Bridge.Navigation.BridgeNavigator",$asm.$);Bridge.apply($asm.$.Bridge.Navigation.BridgeNavigator,{f1:function(ev){var clickedElement=ev.target,href,isMyHref,pageId;(Bridge.referenceEquals(Bridge.getType(clickedElement),HTMLAnchorElement)||(clickedElement=$(ev.target).parents("a").get(0)),href=clickedElement.getAttribute("href"),System.String.isNullOrEmpty(href))||(isMyHref=System.String.startsWith(href,"spaf:"),isMyHref&&(ev.preventDefault(),pageId=System.String.replaceAll(href,"spaf:",""),this.Navigate(pageId)))}});Bridge.define("Bridge.Navigation.BridgeNavigatorConfigBase",{inherits:[Bridge.Navigation.INavigatorConfigurator],fields:{_routes:null},alias:["GetPageDescriptorByKey","Bridge$Navigation$INavigatorConfigurator$GetPageDescriptorByKey"],ctors:{ctor:function(){this.$initialize();this._routes=this.CreateRoutes()}},methods:{GetPageDescriptorByKey:function(key){return System.Linq.Enumerable.from(this._routes).singleOrDefault(function(s){return System.String.equals(s.Bridge$Navigation$IPageDescriptor$Key,key,1)},null)}}});Bridge.define("Bridge.Navigation.PageDescriptor",{inherits:[Bridge.Navigation.IPageDescriptor],props:{Key:null,HtmlLocation:null,PageController:null,CanBeDirectLoad:null,PreparePage:null,RedirectRules:null,AutoEnableSpafAnchors:null},alias:["Key","Bridge$Navigation$IPageDescriptor$Key","HtmlLocation","Bridge$Navigation$IPageDescriptor$HtmlLocation","PageController","Bridge$Navigation$IPageDescriptor$PageController","CanBeDirectLoad","Bridge$Navigation$IPageDescriptor$CanBeDirectLoad","PreparePage","Bridge$Navigation$IPageDescriptor$PreparePage","RedirectRules","Bridge$Navigation$IPageDescriptor$RedirectRules","AutoEnableSpafAnchors","Bridge$Navigation$IPageDescriptor$AutoEnableSpafAnchors"],ctors:{ctor:function(){this.$initialize();this.AutoEnableSpafAnchors=$asm.$.Bridge.Navigation.PageDescriptor.f1}}});Bridge.ns("Bridge.Navigation.PageDescriptor",$asm.$);Bridge.apply($asm.$.Bridge.Navigation.PageDescriptor,{f1:function(){return!0}});Bridge.define("Bridge.Navigation.BridgeNavigatorWithRouting",{inherits:[Bridge.Navigation.BridgeNavigator],alias:["Navigate","Bridge$Navigation$INavigator$Navigate","InitNavigation","Bridge$Navigation$INavigator$InitNavigation"],ctors:{ctor:function(configuration){this.$initialize();Bridge.Navigation.BridgeNavigator.ctor.call(this,configuration);window.onpopstate=Bridge.fn.combine(window.onpopstate,Bridge.fn.bind(this,function(){var urlInfo=this.ParseUrl();this.NavigateWithoutPushState(System.String.isNullOrEmpty(urlInfo.PageId)?configuration.Bridge$Navigation$INavigatorConfigurator$HomeId:urlInfo.PageId,urlInfo.Parameters)}))}},methods:{NavigateWithoutPushState:function(pageId,parameters){parameters===void 0&&(parameters=null);Bridge.Navigation.BridgeNavigator.prototype.Navigate.call(this,pageId,parameters)},Navigate:function(pageId,parameters){parameters===void 0&&(parameters=null);Bridge.Navigation.NavigationUtility.PushState(pageId,parameters);Bridge.Navigation.BridgeNavigator.prototype.Navigate.call(this,pageId,parameters)},InitNavigation:function(){var parsed=this.ParseUrl(),page;if(System.String.isNullOrEmpty(parsed.PageId))Bridge.Navigation.BridgeNavigator.prototype.InitNavigation.call(this);else{if(this.EnableSpafAnchors(),page=this.Configuration.Bridge$Navigation$INavigatorConfigurator$GetPageDescriptorByKey(parsed.PageId),page==null)throw new System.Exception(System.String.format("Page not found with ID {0}",[parsed.PageId]));Bridge.staticEquals(page.Bridge$Navigation$IPageDescriptor$CanBeDirectLoad,null)||page.Bridge$Navigation$IPageDescriptor$CanBeDirectLoad()?this.Navigate(parsed.PageId,parsed.Parameters):(Bridge.Navigation.NavigationUtility.ReplaceState(this.Configuration.Bridge$Navigation$INavigatorConfigurator$HomeId),this.NavigateWithoutPushState(this.Configuration.Bridge$Navigation$INavigatorConfigurator$HomeId))}},ParseUrl:function(){var res=new Bridge.Navigation.BridgeNavigatorWithRouting.UrlDescriptor,hash=window.location.hash,equalIndex,doublePointsIndx,parameters,decoded,deserialized;return(hash=System.String.replaceAll(hash,"#",""),System.String.isNullOrEmpty(hash))?res:(equalIndex=System.String.indexOf(hash,String.fromCharCode(61)),equalIndex===-1)?(res.PageId=hash,res):(res.PageId=hash.substr(0,equalIndex),doublePointsIndx=equalIndex+1|0,parameters=hash.substr(doublePointsIndx,hash.length-doublePointsIndx|0),System.String.isNullOrEmpty(parameters))?res:(decoded=Bridge.global.atob(parameters),deserialized=Bridge.merge(Bridge.createInstance(System.Collections.Generic.Dictionary$2(System.String,System.Object)),JSON.parse(decoded)),res.Parameters=deserialized,res)}}})});
//# sourceMappingURL=data:application/json;base64,ewogICJ2ZXJzaW9uIjogMywKICAiZmlsZSI6ICJCcmlkZ2UuTmF2aWdhdGlvbi5taW4uanMiLAogICJzb3VyY2VSb290IjogIiIsCiAgInNvdXJjZXMiOiBbXSwKICAibmFtZXMiOiBbXSwKICAibWFwcGluZ3MiOiAiIiwKICAic291cmNlc0NvbnRlbnQiOiBbXQp9Cg==
